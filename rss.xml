<?xml version="1.0"?>
<rss version="2.0">  <channel>
    <title>khalily&#39;s Blog</title>
    <link>http://sample.com</link>
    <pubDate>2013-06-04 11:54:20 +0800</pubDate>
    <item>
      <title>caculate</title>
      <link>http://sample.com/go/caculate/</link>
      <pubDate>2013-06-03 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;用 golang 实现的计算器&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;功能支持&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;简单四则运算&lt;/li&gt;&#xA;&lt;li&gt;优先级支持&lt;/li&gt;&#xA;&lt;li&gt;小括号支持&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;简单演示&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ ./caculator &#xA;Please input express:&#xA;1+2*1-12+2-(1+2*3)&#xA;[1 + 2 * 1 - 12 + 2 - ( 1 + 2 * 3 )]      //中缀表达式&#xA;[1 2 1 * + 12 - 2 + 1 2 3 * + -]            //后缀表达式&#xA;-14                                     //结果&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;实现流程&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/caculate.png&#34; alt=&#34;caculate.png&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;后缀到前缀的转换&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;func pre2stuf(exps []string) (exps2 []string) {&#xA;    list1 := list.New()&#xA;    list2 := list.New()&#xA;&#xA;    for _, exp := range exps {&#xA;        if isOperate(exp) {&#xA;            if op, ok := isPop(list1, exp); ok {&#xA;                for _, s := range op {&#xA;                    list2.PushBack(s)&#xA;                }&#xA;            }&#xA;            if exp == &amp;quot;)&amp;quot; {&#xA;                continue&#xA;            }&#xA;            list1.PushBack(exp)&#xA;        } else {&#xA;            list2.PushBack(exp)&#xA;        }&#xA;    }&#xA;&#xA;    for cur := list1.Back(); cur != nil; cur = cur.Prev() {&#xA;        list2.PushBack(cur.Value)&#xA;    }&#xA;&#xA;    for cur := list2.Front(); cur != nil; cur = cur.Next() {&#xA;        if curValue, ok := cur.Value.(string); ok {&#xA;            exps2 = append(exps2, curValue)&#xA;        }&#xA;    }&#xA;    return&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;代码在&lt;a href=&#34;https://github.com/khalily/caculator&#34;&gt;这里&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:khalily/caculator.git&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;欢迎交流！^_^&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>gscan</title>
      <link>http://sample.com/go/gscan/</link>
      <pubDate>2013-05-31 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;用Go语言实现的一个端口扫描器&amp;ndash;gscan&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;程序功能参数&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Usage of ./gscan:&#xA;  -h=&amp;quot;help&amp;quot;: help doc&#xA;  -ip=&amp;quot;127.0.0.1&amp;quot;: IP range of scan. Example:&#xA;        192.168.1.1&#xA;        192.168.1.1, 192.168.1.5&#xA;        192.168.1.1-192.168.1.100&#xA;  -p=&amp;quot;1-1024&amp;quot;: Port range of scan. Example:&#xA;        135&#xA;        135, 445, 3389&#xA;        1-1024&#xA;  -w=&amp;quot;connect&amp;quot;: Way of scan. Expample&#xA;        connect&#xA;        syn&#xA;        fin &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;实现思想&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;一个端口一个&lt;code&gt;goroutine&lt;/code&gt;，用一个&lt;code&gt;chanel&lt;/code&gt;接收所有&lt;code&gt;goroutine&lt;/code&gt;返回的扫描结果&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;代码在&lt;a href=&#34;https://github.com/khalily/gscan&#34;&gt;这里&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:khalily/gscan.git&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;欢迎交流！^_^&lt;/p&gt;&#xA;</description>
    </item>
  </channel>
</rss>
